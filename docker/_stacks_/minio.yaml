# yaml-language-server: $schema=https://raw.githubusercontent.com/compose-spec/compose-spec/master/schema/compose-spec.json

# export AWS_ACCESS_KEY_ID=s3admin
# export AWS_SECRET_ACCESS_KEY=s3passw0rd
# export AWS_ENDPOINT_URL=http://localhost:9100
# aws s3 mb s3://devbucket
# aws s3 cp README.md s3://devbucket/demo/README.md
# aws --no-verify-ssl s3 ls s3://devbucket

services:
  minio:
    image: minio/minio:${MINIO_VERSION:-latest}
    hostname: minio
    restart: unless-stopped
    ports: ['9100:9100', '9101:9101']
    environment:
      # docker-compose exec minio /usr/bin/mc alias ls
      MINIO_BROWSER_LOGIN_ANIMATION: off
      MINIO_DOMAIN: ${MINIO_DOMAIN:-localhost}
      MINIO_ROOT_USER: ${MINIO_ROOT_USER:-s3admin}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD:-s3passw0rd}
      MC_HOST_local: http://${MINIO_ROOT_USER:-s3admin}:${MINIO_ROOT_PASSWORD:-s3passw0rd}@localhost:9100
    volumes: ['../../temp/minio_data:/data:rw']
    command: server /data --address "0.0.0.0:9100" --console-address "0.0.0.0:9101"
    shm_size: 256m # set shared memory limit
    mem_limit: 256m # set memory limit
    cpus: 2.0 # set CPUs limit
    post_start:
      - command: sh -c "/usr/bin/mc mb local/devbucket --ignore-existing"
      - command: sh -c "/usr/bin/mc mb local/testbucket --ignore-existing"
      - command: sh -c "/usr/bin/mc mb local/dbarchive --ignore-existing"
      - command: sh -c "/usr/bin/mc anonymous set download local/devbucket"
      - command: sh -c "/usr/bin/mc anonymous set download local/testbucket"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9100/minio/health/live"]
      interval: 3s
      timeout: 5s
      retries: 3
    extra_hosts: ['host.docker.internal:host-gateway']
    networks: ['myorg_network']

  minio-cdn:
    image: nginx:${NGINX_VERSION:-mainline-alpine-slim}
    hostname: minio-cdn
    restart: unless-stopped
    ports: ['8010:8010']
    volumes: ['../nginx/nginx-minio.conf:/etc/nginx/templates/default.conf.template:ro']
    healthcheck:
      test: ['CMD', 'nc', '-vz', '127.0.0.1', '80']
      interval: 3s
      timeout: 5s
      retries: 3
    extra_hosts: ['host.docker.internal:host-gateway']
    networks: ['myorg_network']
    depends_on:
      minio: { condition: service_started }
