# https://moonrepo.dev/docs/config/toolchain
# yaml-language-server: $schema=https://moonrepo.dev/schemas/toolchain.json
$schema: 'https://moonrepo.dev/schemas/toolchain.json'

proto:
  version: '0.52.5'

# Configures Node.js within the toolchain. moon manages its own version of Node.js
# instead of relying on a version found on the host machine. This ensures deterministic
# and reproducible builds across any machine.
node:
  version: '22.19'
  packageManager: 'pnpm'                  # Defines which package manager to utilize.
  inferTasksFromScripts: true             # Automatically infer moon tasks from `package.json` scripts.
  addEnginesConstraint: false             # Add `node.version` as a constraint in the root `package.json` `engines`.
  dedupeOnLockfileChange: false           # Dedupe dependencies after the lockfile has changed, keep the workspace tree as clean and lean as possible.
  syncPackageManagerField: true           # Sync the currently configured package manager and its version to the packageManager field in the root package.json.
  rootPackageOnly: true                   # Single version policy patterns by only allowing dependencies in the root `package.json`.
  syncProjectWorkspaceDependencies: true  # Sync a project's `dependsOn` as dependencies within the project's `package.json`.
  syncVersionManagerConfig: null          # Sync `node.version` to a 3rd-party version manager's config file.
  # dependencyVersionFormat: link         # Uses link:../relative/path and symlinks package contents.
  dependencyVersionFormat: workspace      # Uses workspace:*, which resolves to "1.2.3". Requires package workspaces.
  pnpm:
    version: '10.15.1'                     # The version of the package manager to use.

# Configures Python within the toolchain.
# python:
#   version: '3.13'
#   packageManager: uv
#   uv:
#     version: '0.5.29'

# Configures Rust within the toolchain.
# rust:
#   version: '1.89'
#   syncToolchainConfig: true
#   targets:
#     - 'aarch64-apple-darwin'
#     - 'x86_64-apple-darwin'
#     - 'x86_64-pc-windows-msvc'
#   # List of Cargo binaries to install globally and make available to tasks.
#   bins: ['cargo-nextest', 'cargo-generate', 'cargo-make', 'cargo-watch', 'cargo-px']
