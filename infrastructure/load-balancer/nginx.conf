worker_processes auto;
worker_cpu_affinity auto;
worker_rlimit_nofile 65535;
error_log /var/log/nginx/error.log warn;
pid /tmp/nginx.pid;

events {
    worker_connections 4096;
    use epoll;
    multi_accept on;
    accept_mutex off;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    map $http_user_agent $loggable {
        ~*Amazon-Route53-Health-Check-Service 0;
        default 1;
    }

    # Enhanced logging format with proxy metrics
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                '$status $body_bytes_sent "$http_referer" '
                '"$http_user_agent" "$http_x_forwarded_for" '
                'rt=$request_time uct="$upstream_connect_time" '
                'uht="$upstream_header_time" urt="$upstream_response_time" '
                'upstream="$upstream_addr" upstream_status="$upstream_status"';

    access_log /var/log/nginx/access.log main buffer=32k flush=5s if=$loggable;

    # Performance optimizations
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;

    # Buffer optimizations
    client_body_buffer_size 128k;
    client_max_body_size 100m;
    client_header_buffer_size 1k;
    large_client_header_buffers 4 4k;

    # Proxy buffers for reverse proxy
    proxy_buffering on;
    proxy_buffer_size 128k;
    proxy_buffers 4 256k;
    proxy_busy_buffers_size 256k;

    # Temporary directories
    client_body_temp_path /tmp/client_body_temp;
    proxy_temp_path /tmp/proxy_temp;
    fastcgi_temp_path /tmp/fastcgi_temp;

    # Timeouts
    client_header_timeout 3m;
    client_body_timeout 3m;
    send_timeout 3m;
    keepalive_timeout 30;
    keepalive_requests 1000;

    # Proxy timeouts
    proxy_connect_timeout 60s;
    proxy_send_timeout 60s;
    proxy_read_timeout 60s;

    # Compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # Security headers
    server_tokens off;
    add_header X-Frame-Options SAMEORIGIN;
    add_header X-Content-Type-Options nosniff;
    add_header X-XSS-Protection "1; mode=block";

    # Upstream for your Docker Swarm application
    upstream app_backend {
        server 10.201.1.115:8080 max_fails=1 fail_timeout=60s weight=100;
        server 10.201.2.208:8080 max_fails=1 fail_timeout=60s weight=1 backup;
        server 10.201.3.183:8080 max_fails=1 fail_timeout=60s weight=1 backup;
        keepalive 32;
    }

    # Upstream for Portainer
    upstream portainer_backend {
        server 10.201.1.115:9000 max_fails=1 fail_timeout=60s weight=100;
        server 10.201.2.208:9000 max_fails=1 fail_timeout=60s weight=1 backup;
        server 10.201.3.183:9000 max_fails=1 fail_timeout=60s weight=1 backup;
        keepalive 32;
    }

    # Upstream for Grafana - Fail faster
    upstream grafana_backend {
         server 10.201.1.115:3000 max_fails=1 fail_timeout=60s weight=100;
         server 10.201.2.208:3000 max_fails=1 fail_timeout=60s weight=1 backup;
         server 10.201.3.183:3000 max_fails=1 fail_timeout=60s weight=1 backup;
         keepalive 32;
     }

    # Rate limiting zones
    #limit_req_zone $binary_remote_addr zone=general_limit:10m rate=30r/s;

    # SSL Configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    ssl_session_tickets off;

    # WebSocket support
    map $http_upgrade $connection_upgrade {
        default upgrade;
        ''      close;
    }

    # HTTP Server (Container Port 8080, mapped to host port 80)
    server {
        listen 8080 default_server reuseport;
        listen [::]:8080 default_server reuseport;
        server_name apps-lgtm.zero-one.cloud portainer-lgtm.zero-one.cloud grafana-lgtm.zero-one.cloud _;

        # ACME Challenge location (for Let's Encrypt webroot)
        location /.well-known/acme-challenge/ {
            root /var/www/acme-challenge;
            try_files $uri =404;
            access_log off;
        }

        # Health check on HTTP
        location /nginx-health {
            access_log off;
            return 200 "nginx http healthy\n";
            add_header Content-Type text/plain;
        }

        # Redirect all other traffic to HTTPS
        location / {
            return 301 https://$server_name$request_uri;
        }
    }

    # HTTPS Server for main application
    server {
        listen 8443 ssl reuseport;
        listen [::]:8443 ssl;
        http2 on;

        server_name apps-lgtm.zero-one.cloud;

        # SSL Certificate configuration
        ssl_certificate /etc/nginx/ssl/apps-lgtm.zero-one.cloud.crt;
        ssl_certificate_key /etc/nginx/ssl/apps-lgtm.zero-one.cloud.key;

        # Enhanced security headers
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
        add_header X-Frame-Options SAMEORIGIN always;
        add_header X-Content-Type-Options nosniff always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;

        # Main application proxy
        location / {
            # Rate limiting
            #limit_req zone=general_limit burst=20 nodelay;

            proxy_pass http://app_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Port 443;

            # WebSocket support
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;

            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
            proxy_redirect off;
        }

        # Static files with caching
        location ~* \.(jpg|jpeg|png|gif|ico|css|js|pdf|zip)$ {
            proxy_pass http://app_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            expires 1y;
            add_header Cache-Control "public, immutable";
        }

        # Health check
        location /health {
            access_log off;
            proxy_pass http://app_backend/health;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Security - block sensitive files
        location ~ /\.(htaccess|htpasswd|env|git) {
            deny all;
        }
    }

    # HTTPS Server for Portainer
    server {
        listen 8443 ssl;
        listen [::]:8443 ssl;
        http2 on;

        server_name portainer-lgtm.zero-one.cloud;

        # SSL Certificate configuration
        ssl_certificate /etc/nginx/ssl/apps-lgtm.zero-one.cloud.crt;
        ssl_certificate_key /etc/nginx/ssl/apps-lgtm.zero-one.cloud.key;

        # Enhanced security headers (relaxed for Portainer)
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
        add_header X-Content-Type-Options nosniff always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        # Note: X-Frame-Options removed for Portainer compatibility

        # Portainer proxy
        location / {
            # Rate limiting
            #limit_req zone=general_limit burst=20 nodelay;

            proxy_pass http://portainer_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Port 443;

            # WebSocket support (important for Portainer)
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;

            # Extended timeouts for Portainer operations
            proxy_connect_timeout 60s;
            proxy_send_timeout 300s;
            proxy_read_timeout 300s;
            proxy_redirect off;

            # Portainer specific - disable buffering for real-time logs/terminal
            proxy_buffering off;
        }

        # Security - block sensitive files
        location ~ /\.(htaccess|htpasswd|env|git) {
            deny all;
        }
    }

    # HTTPS Server for Grafana
    server {
        listen 8443 ssl;
        listen [::]:8443 ssl;
        http2 on;

        server_name grafana-lgtm.zero-one.cloud;

        # SSL Certificate configuration
        ssl_certificate /etc/nginx/ssl/apps-lgtm.zero-one.cloud.crt;
        ssl_certificate_key /etc/nginx/ssl/apps-lgtm.zero-one.cloud.key;

        # Enhanced security headers (relaxed for Grafana)
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
        add_header X-Content-Type-Options nosniff always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        # Note: X-Frame-Options removed for Grafana compatibility

        # Main Grafana proxy
        location / {
            # Rate limiting
            #limit_req zone=general_limit burst=20 nodelay;

            proxy_pass http://grafana_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Host $host;
            proxy_set_header X-Forwarded-Port 443;

            # WebSocket support for other endpoints
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;

            # Standard timeouts
            proxy_connect_timeout 60s;
            proxy_send_timeout 300s;
            proxy_read_timeout 300s;
            proxy_redirect off;

            # Disable buffering for real-time updates
            proxy_buffering off;
        }

        # Security - block sensitive files
        location ~ /\.(htaccess|htpasswd|env|git) {
            deny all;
        }
    }

    # Default HTTPS server (catches requests with wrong/missing Host header)
    server {
        listen 8443 ssl default_server;
        listen [::]:8443 ssl default_server;
        http2 on;

        server_name _;

        # SSL Certificate configuration
        ssl_certificate /etc/nginx/ssl/apps-lgtm.zero-one.cloud.crt;
        ssl_certificate_key /etc/nginx/ssl/apps-lgtm.zero-one.cloud.key;

        # For any other request, close connection (or return error)
        location / {
            return 444; # Close connection without response
            # Alternative: return 400 "Bad Request - Invalid Host Header";
        }
    }
}
