# https://moonrepo.dev/docs/config/project
# yaml-language-server: $schema=https://moonrepo.dev/schemas/project.json
$schema: 'https://moonrepo.dev/schemas/project.json'

type: application
language: unknown
toolchain:
  default: null
stack: backend
tags: ['app']

# Overrides the name (identifier) of the project
id: '{{ package_name }}'

project:
  name: '{{ package_name }}'
  description: '{{ package_description }}'

env:
  APP_PREFIX: "$(jq -r .name <$workspaceRoot'/package.json')"
  APP_VERSION: '$(jq -r .version <$workspaceRoot''/package.json'')'
  IMAGE_NAME: '$APP_PREFIX-$project'

tasks:
  deps:
    command: "mix deps.get && mix deps.compile"

  setup:
    command: "mix setup"

  dev:
    command: "mix phx.server"
    options:
      envFile: ".env"

  start:
    env:
      MIX_ENV: 'prod'
    command: "_build/${MIX_ENV}/rel/{{ package_name }}/bin/server"
    options:
      mergeEnv: replace
      envFile: ".env"

  build:
    command: >
      mix local.hex --force
      && mix local.rebar --force
      && mix deps.get --only ${MIX_ENV}
      && mix deps.compile
      && mix assets.deploy
      && mix compile --force
      && mix release --force --overwrite
    deps: ['release']
    env:
      MIX_ENV: 'prod'
    options:
      envFile: ".env"

  docker-run:
    command: 'docker run --network=host --rm -it --env-file .env --name $IMAGE_NAME $IMAGE_NAME:$APP_VERSION'
    options:
      mergeEnv: replace
      runFromWorkspaceRoot: true
      interactive: false
      outputStyle: buffer-only-failure
      runInCI: false
      cache: false
      shell: true

  docker-shell:
    command: 'docker run --network=host --rm -it --env-file .env --entrypoint /bin/sh $IMAGE_NAME:$APP_VERSION'
    options:
      mergeEnv: replace
      runFromWorkspaceRoot: true
      interactive: false
      outputStyle: buffer-only-failure
      runInCI: false
      cache: false
      shell: true
