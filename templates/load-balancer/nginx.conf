worker_processes auto;
worker_cpu_affinity auto;
worker_rlimit_nofile 16384;
error_log /var/log/nginx/error.log warn;
pid /var/run/nginx.pid;
load_module /etc/nginx/modules/ngx_http_geoip2_module.so;
load_module /etc/nginx/modules/ngx_http_naxsi_module.so;
load_module modules/ngx_http_headers_more_filter_module.so;

events {
    worker_connections 2048;
    use epoll;
    multi_accept on;
}

http {
    include /etc/nginx/naxsi/naxsi_core.rules;
    limit_req_zone $binary_remote_addr zone=app_limit:50m rate=30r/s;

    variables_hash_bucket_size 1024;
    variables_hash_max_size 1024;
    map_hash_max_size 1024;
    map_hash_bucket_size 512;
    types_hash_bucket_size 512;
    server_names_hash_bucket_size 512;
    sendfile on;
    tcp_nodelay on;
    tcp_nopush on;
    autoindex off;
    server_tokens off;
    more_clear_headers "Server";

    # Optimized timeouts and connection handling
    keepalive_timeout 15;
    keepalive_requests 100;
    reset_timedout_connection on;
    send_timeout 60;

    client_max_body_size 50m;

    # Security headers
    add_header X-Frame-Options SAMEORIGIN;
    add_header X-Content-Type-Options nosniff;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;

    client_body_buffer_size 16k;
    client_header_buffer_size 1k;
    large_client_header_buffers 2 2k;

    # SSL Configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    # TLS 1.2 Ciphers
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305;
    # TLS 1.3 Ciphers
    ssl_conf_command Ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:5m;
    ssl_session_timeout 5m;
    ssl_session_tickets off;

    # HSTS
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;

    real_ip_header X-Forwarded-For;
    real_ip_recursive on;
    include mime.types;
    default_type application/octet-stream;

    map $http_user_agent $loggable {
        ~*Amazon-Route53-Health-Check-Service 0;
        default 1;
    }

    map $http_host $loggable_host {
        default 1;
        "{{ grafana_monitoring_domain }}" 0;
        "{{ portainer_monitoring_domain }}" 0;
    }

    # Create a final variable that combines both conditions
    map "$loggable:$loggable_host" $final_loggable {
        "1:1" 1;
        default 0;
    }

    index index.php index.html index.htm;

    # GeoIP2 logging format
    log_format main_geo escape=json '{'
                                    '"msec": "$msec", '
                                    '"connection": "$connection", '
                                    '"connection_requests": "$connection_requests", '
                                    '"pid": "$pid", '
                                    '"request_id": "$request_id", '
                                    '"request_length": "$request_length", '
                                    '"remote_addr": "$remote_addr", '
                                    '"remote_user": "$remote_user", '
                                    '"remote_port": "$remote_port", '
                                    '"time_local": "$time_local", '
                                    '"time_iso8601": "$time_iso8601", '
                                    '"request": "$request", '
                                    '"request_uri": "$request_uri", '
                                    '"args": "$args", '
                                    '"status": "$status", '
                                    '"body_bytes_sent": "$body_bytes_sent", '
                                    '"bytes_sent": "$bytes_sent", '
                                    '"http_referer": "$http_referer", '
                                    '"http_user_agent": "$http_user_agent", '
                                    '"http_x_forwarded_for": "$http_x_forwarded_for", '
                                    '"http_host": "$http_host", '
                                    '"server_name": "$server_name", '
                                    '"request_time": "$request_time", '
                                    '"upstream": "$upstream_addr", '
                                    '"upstream_connect_time": "$upstream_connect_time", '
                                    '"upstream_header_time": "$upstream_header_time", '
                                    '"upstream_response_time": "$upstream_response_time", '
                                    '"upstream_response_length": "$upstream_response_length", '
                                    '"upstream_status": "$upstream_status", '
                                    '"upstream_cache_status": "$upstream_cache_status", '
                                    '"ssl_protocol": "$ssl_protocol", '
                                    '"ssl_cipher": "$ssl_cipher", '
                                    '"scheme": "$scheme", '
                                    '"request_method": "$request_method", '
                                    '"server_protocol": "$server_protocol", '
                                    '"pipe": "$pipe", '
                                    '"gzip_ratio": "$gzip_ratio", '
                                    '"geoip_country_code": "$geoip2_data_country_iso", '
                                    '"geoip_country_name": "$geoip2_data_country_name"'
                                    '}';

    # Optimized logging for memory usage
    access_log /var/log/nginx/access.log main_geo buffer=16k flush=10s if=$final_loggable;

    # GeoIP2 configuration
    geoip2 /usr/share/geoip/GeoLite2-Country.mmdb {
        $geoip2_data_country_iso country iso_code;
        $geoip2_data_country_name country names en;
    }

    gzip on;
    gzip_disable "msie6";
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 4;
    gzip_buffers 8 4k;
    gzip_http_version 1.1;
    gzip_types text/css text/xml text/plain application/javascript image/jpeg image/png image/gif
               image/x-icon image/svg+xml image/webp application/font-woff application/json
               application/vnd.ms-fontobject application/vnd.ms-powerpoint;
    gzip_static on;

    # WebSocket support
    map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }

    # Country blocking configuration
    map $geoip2_data_country_iso $allowed_country {
        default yes;
        #ID no;
        #CN no;
        #UA no;
        #IN no;
        #RU no;
    }

    include /etc/nginx/conf.d/*.conf;
}
